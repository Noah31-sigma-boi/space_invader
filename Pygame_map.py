import pygame

_ = None
map_level = [
    [[_], [_], [_], [_], [_], [_], [_], [_], [_], [_], [_], [_], [_], [_]],
    [[_], [_], [_], [_], [_], [_], [_], [_], [_], [_], [_], [_], [_], [_]],
    [[_], [_], [_], [_], [_], [_], [_], [_], [_], [_], [_], [_], [_], [_]],
    [[_], [_], [_], [_], [_], [_], [_], [_], [_], [_], [_], [_], [_], [_]],
    [[_], [_], [_], [_], [_], [_], [_], [_], [_], [_], [_], [_], [_], [_]],
    [[_], [_], [_], [_], [_], [_], [_], [_], [_], [_], [_], [_], [_], [_]],
    [[_], [_], [_], [_], [_], [_], [_], [_], [_], [_], [_], [_], [_], [_]],
    [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1], [1], [1], [1], [1]],
    [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1], [1], [1], [1], [1]],
    [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]
]

class Map_tiles:

    def __init__(self, game):
        self.game = game
        self.map = map_level
        self.world_map = {}
        self.get_map()

    def get_map(self):
        for i, row in enumerate(self.map):
            for j, value in enumerate(row):
                if value != [None]:
                    self.world_map[(j,i)] = value



    def draw(self):
        for pos in self.world_map:
            wall = pygame.Rect(pos[0]*50, pos[1]*50, 50, 50)
            pygame.draw.rect(self.game.display, ((0,100,200)), wall)
